---
- name: Install OracleDB | set fact with ORACLE_HOME
  set_fact:
       oracle_home_path: "{%- if db_homes_config[dbh.home]['oracle_home'] is defined  -%}
                            {{db_homes_config[dbh.home]['oracle_home']}}
                        {%- else -%}
                             {{oracle_base}}/{{db_homes_config[dbh.home]['version']}}/{{db_homes_config[dbh.home]['home']}}
                        {%- endif -%}"

- name: Install OracleDB | Check if DB-server is already installed
  shell: cat "{{ oracle_inventory_loc }}/ContentsXML/inventory.xml" |grep -w {{ oracle_home_path }} |awk  '{print $3}' | cut -f2 -d'"'
  run_once: "{{ configure_cluster }}"
  register: existing_dbhome
  changed_when: False
  failed_when: False
  tags: install_home,existing_dbhome,checkdbswinstall

- debug: msg="Installing ORACLE_HOME - {{ oracle_home_path }}"
  when: oracle_home_path not in existing_dbhome.stdout_lines

- name: Install OracleDB | add dotprofile
  template:
    src: dotprofile-home.j2
    dest: "/home/{{ oracle_user}}/{{ oracle_profile_name}}"
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"
    mode: 0660
  #when: oracle_home_path not in existing_dbhome.stdout_lines
  tags: create_db,dotprofile_db

- name: Install OracleDB | Setup response file for install (DB)
  template:
    src: "db-install.rsp.{{ db_version }}.j2"
    dest: "{{ oracle_rsp_stage }}/{{ oracle_db_responsefile }}"
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"
    mode: 0600
  run_once: "{{ configure_cluster }}"
  when: oracle_home_path not in existing_dbhome.stdout_lines
  register: output
  tags: responsefileswdb

- include_tasks: "{{ db_version }}.yml"

- name: Install OracleDB | Run root script after installation
  shell: "{{ oracle_home_path }}/root.sh"
  run_once: "{{ configure_cluster }}"
  when: oradbinstall.changed
  tags:
    - runroot

- name: Get files in a folder
  find:
    paths: "{{ oracle_home_path }}/install/"
    patterns: "root_{{ ansible_hostname }}*.log"
  register: log_files
 
